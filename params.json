{"name":"React-tabs-navigation","tagline":"react-tabs-navigation is a nice react component that enables navigation through tabs in your web app.","body":"react-tabs-navigation\r\n=====================\r\n\r\nThis react component enables navigating through tabs in your web app.\r\nIt is composed of three different parts:\r\n\r\n1. Banner\r\n\r\n   This content does not change with tabs and sits on top of the tabs bar. When the user scrolls past the banner the tabs bar stick on top of the page\r\n\r\n2. Tabs\r\n\r\n   The tabs of the element. They are horizontal. You can define their styles, hover styles and selected styles.\r\n\r\n   The selected tab in underlined, this animates to the newly selected tab when a new tab is selected.\r\n\r\n3. Content\r\n\r\n   The content that changes when the user changes the tab.\r\n\r\nInstalling\r\n----------\r\n\r\n```bash\r\n$ npm install react-tabs-navigation\r\n```\r\n\r\nProps\r\n-----\r\n\r\nThis component accept the following props:\r\n\r\n* banner [object]\r\n\r\n  content over the tab bar\r\n\r\n  * children [func|node]\r\n\r\n    a node or a function that returns a node (recommended)\r\n\r\n* color [string]\r\n\r\n  main color (can be overridden on lineStyles and tabStyles)\r\n\r\n* fixOffset [number]\r\n\r\n  The tabs bar fixes on the sreen when you scroll pass to it.\r\n  If you want it to fix below the upper limit of the document set here the offset\r\n  If you want it to not fix set the offset to at least -(the height of the bar)\r\n\r\n* lineStyle [object]\r\n\r\n  Styles of the underline.\r\n  Use `backgroundColor` to change the color and height to change the `width` (default 3px) of the line.\r\n  (Accepts Radium properties like `:hover`)\r\n\r\n* onTabChange [func]\r\n\r\n  Function that gets executed when a tab changes, first argument is the index of the tab\r\n\r\n* selected [string|number]\r\n\r\n  The index or the `keyName` of the tab selected initially\r\n\r\n* selectedTabStyle [object]\r\n\r\n  The style of the tab when it is selected.\r\n  (Accepts Radium properties like `:hover`)\r\n\r\n* **tabs** [array] -required-\r\n\r\n  An array of objects, one for each tab\r\n\r\n  * children [func|node]\r\n\r\n    a node or a function that returns a node (recommended)\r\n\r\n  * displayName [string]\r\n\r\n    the name displayed on the tab\r\n\r\n* tabsBarClassName [string]\r\n\r\n  className of the tabs bar element\r\n\r\n* tabsBarStyle [object]\r\n\r\n  The style of the tabs bar\r\n\r\n* tabsClassName [string]\r\n\r\n  className of each tab. When they are selected they also have the class `is-selected`\r\n\r\n* tabsStyle [object]\r\n\r\n  The style of the tab.\r\n  (Accepts Radium properties like `:hover`)\r\n\r\nSimple example\r\n--------------\r\n\r\nOne of the simplest examples one could use\r\n\r\n````javascript\r\nimport Tabs from 'react-tabs-navigation'\r\n\r\n<Tabs\r\n  banner={{\r\n    children: 'Content over the tabs!'\r\n  }}\r\n  tabs={[\r\n    {\r\n      children: () => (\r\n        <div>\r\n          This is the first tab content\r\n        </div>\r\n      ),\r\n      displayName: 'Tab 1'\r\n    },\r\n    {\r\n      children: () => (\r\n        <div>\r\n          This is the second tab content\r\n        </div>\r\n      ),\r\n      displayName: 'Tab 2'\r\n    }\r\n  ]}\r\n/>\r\n````\r\n\r\nFull example\r\n------------\r\n\r\nA more complete example using more functionalities\r\n\r\n````javascript\r\nimport Tabs from 'react-tabs-navigation'\r\n\r\n<Tabs\r\n  banner={{\r\n    children: 'Content over the tabs!'\r\n  }}\r\n  tabs={[\r\n    {\r\n      children: () => (\r\n        <div>\r\n          This is the first tab content\r\n        </div>\r\n      ),\r\n      displayName: 'Tab 1'\r\n    },\r\n    {\r\n      children: () => (\r\n        <div>\r\n          This is the second tab content\r\n        </div>\r\n      ),\r\n      displayName: 'Tab 2'\r\n    }\r\n  ]}\r\n/>\r\n````\r\n\r\nTo do list\r\n----------\r\n\r\n- [ ] Use travis\r\n- [ ] Write some tests\r\n- [ ] Optional animation when changing between tabs\r\n- [ ] Keyboard naviation\r\n\r\nContribute\r\n------------\r\n\r\n### Getting Started\r\n\r\n* Submit a ticket for your issue on GitHub in [Repository issues](https://github.com/pepjo/react-tabs-navigation/issues)\r\n\r\n### Making Changes\r\nWe are following [Gitflow](http://nvie.com/posts/a-successful-git-branching-model/) workflow.\r\n\r\n* Create feature branch from `master` branch called `feature/{ISSUE}` where `{ISSUE}` is GitHub issue identifier e.g. `feature/123`\r\n* Make commits of logical units\r\n* Don't forget about tests! :)\r\n* Stick to code standards\r\n\r\n### Submiting Changes\r\n\r\n1. Push your branch to base repository\r\n2. Submit a pull request to `master` branch\r\n3. Wait for someone to review your changes and merge it\r\n4. If your pull request is tagged as `To correct` you should fix your code as soon as possible and go back to point 3.\r\n\r\nMIT License\r\n------------\r\n\r\nCopyright (c) 2015, Pep Rodeja\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}